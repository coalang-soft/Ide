#include ccl/jio/Stream.cl2

var Actions;

{
    
    var runConfigs;
    {
        //Run configurations
        def none(file){
            #include run/none.ccl
        }
        def coalang(file){
            #include run/coalang.ccl
        }
        def compiledcoa(file){
            #include run/compiledcoa.ccl
        }
        
        runConfigs = [
            none:none,
            coalang:coalang,
            compiledcoa:compiledcoa,
            
            default:none
        ];
        
    }
    
    def registerRunner(file){
        var func = eval.js("function(file){" & File(file).buildString() & "};");
        runConfigs.setProperty(
            array(file.getName().split("\\.")).get(0), 
            func
        );
    }
    
    var customRunnerDir = java("cpa.subos.io.file.DirectoryImpl")(
        java("java.io.File")(getSetting("ide.res") & "runners")
    );
    customRunnerDir.listFiles().forEach(registerRunner);
    
    var jar = "-jar";
    var compile = "-compile";
    var lib = "-lib";
    
    def runFile(file){
        
        var extension = array(file.getName().split("\\."));
        extension = extension.get(extension.length() - 1);
        var category = getSyntax("extension." & extension);
        
        if(category.type == "undefined"){
            runConfigs.default(file);
        }else{
            var f = runConfigs[category];
            if(f.type == "error"){
                println("No starter found: '" & category & "'");
            }else{
                f(file);
            }
        }
    }
    
    def run(tabs){        
        var tabArray = array(tabs.getTabs().toArray());
        tabArray = <i|tabArray.get(i)>.for(0,tabArray.length()-2);
        for(tabArray){
            var tab = @.0;
            if(fileTabMap.get(tab).type == "undefined"){
                println(tab);
                var fc = JUI.FileChooser();
                fc.setTitle("Save " & tab.getText());
                var file = fc.showSaveDialog(tabs.getScene().getWindow());
                if(file.type == "undefined"){
                    println("Info: No file selected!");
                    return null;
                }else{
                    file = File(file.getPath());
                    tab.setText(file.getName());
                    fileTabMap.put(tab,file);
                }
            }
            fileTabMap.get(tab).writeString(tab.getContent().getContent().getText());
            openFile(fileTabMap.get(tab), tab);
        }
        runFile(fileTabMap.get(tabs.getSelectionModel().getSelectedItem()));
    }
    
    def open(tabs){
        var file = JUI.FileChooser().showOpenDialog(tabs.getScene().getWindow());
        var tab = tabs.getSelectionModel().getSelectedItem();
        if(file.type == "undefined"){
            println("Info: No file selected!");
            return null;
        }else{
            file = File(file.getPath());
            openFile(file,tab);
        }
    }
    
    def openFile(file, tab){
        tab.setText(file.getName());
        fileTabMap.put(tab,file);
        var extension = array(file.getName().split("\\."));
        extension = extension.get(extension.length() - 1);
        var code = createCodeArea("extension." & extension);
        tab.getTabPane().getScene().getStylesheets().add(
            getSyntaxCss("extension." & extension)
        );
        code.replaceText(0,0, file.buildString());
        tab.setContent(CodeScrollPane(code));
    }
    
    Actions = [
        run:run,
        open:open
    ];
}